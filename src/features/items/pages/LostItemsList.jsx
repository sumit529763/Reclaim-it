// src/features/items/pages/LostItemsList.jsx (FINAL VERSION)

import React, { useEffect, useState, useCallback } from "react";
import { Link } from "react-router-dom"; 
import { getLostItems } from "../../../services/items.service"; 
import ItemCard from "../components/ItemCard"; 
import ItemFilter from "../components/ItemFilter"; 

// Local Client-Side Filtering Function (remains unchanged)
const filterItems = (items, filters) => {
Â  Â  return items.filter(item => {
Â  Â  Â  Â  // 1. Search Filter (Title/Description)
Â  Â  Â  Â  const matchesSearch = filters.search.toLowerCase() === '' || 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  item.title.toLowerCase().includes(filters.search.toLowerCase()) || 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  item.description.toLowerCase().includes(filters.search.toLowerCase());

Â  Â  Â  Â  // 2. Category Filter
Â  Â  Â  Â  const matchesCategory = filters.category === 'all' || item.category === filters.category;

Â  Â  Â  Â  // 3. Location Filter
Â  Â  Â  Â  const matchesLocation = filters.location === 'all' || item.location === filters.location;

Â  Â  Â  Â  return matchesSearch && matchesCategory && matchesLocation;
Â  Â  });
}


export default function LostItemsList() {
Â  Â  const [allActiveItems, setAllActiveItems] = useState([]); 
Â  Â  const [displayedItems, setDisplayedItems] = useState([]); 
Â  Â  const [loading, setLoading] = useState(true);
Â  Â  
Â  Â  const [filters, setFilters] = useState({
Â  Â  Â  Â  search: '',
Â  Â  Â  Â  category: 'all',
Â  Â  Â  Â  location: 'all',
Â  Â  });

Â  Â  const handleFilterChange = useCallback((name, value) => {
Â  Â  Â  Â  setFilters(prev => ({ ...prev, [name]: value }));
Â  Â  }, []);

Â  Â  useEffect(() => {
Â  Â  Â  Â  const load = async () => {
Â  Â  Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  Â  Â  Â  const data = await getLostItems(); 
Â  Â  Â  Â  Â  Â  Â  Â  setAllActiveItems(data);
Â  Â  Â  Â  Â  Â  } catch (error) {
Â  Â  Â  Â  Â  Â  Â  Â  console.error("Failed to load lost items:", error);
Â  Â  Â  Â  Â  Â  } finally {
Â  Â  Â  Â  Â  Â  Â  Â  setLoading(false);
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  };
Â  Â  Â  Â  load();
Â  Â  }, []);

Â  Â  useEffect(() => {
Â  Â  Â  Â  const filtered = filterItems(allActiveItems, filters);
Â  Â  Â  Â  setDisplayedItems(filtered);
Â  Â  }, [allActiveItems, filters]);


Â  Â  if (loading) {
Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  <div className="p-8 text-center text-indigo-600 font-semibold">
Â  Â  Â  Â  Â  Â  Â  Â  Loading Lost Items... ðŸ”Ž
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  );
Â  Â  }

Â  Â  return (
Â  Â  Â  Â  <div className="p-8">
Â  Â  Â  Â  Â  Â  <h2 className="text-3xl font-extrabold mb-6 text-red-600">
Â  Â  Â  Â  Â  Â  Â  Â  Lost Items on Campus ðŸ˜”
Â  Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  <ItemFilter 
Â  Â  Â  Â  Â  Â  Â  Â  filters={filters} 
Â  Â  Â  Â  Â  Â  Â  Â  onFilterChange={handleFilterChange} 
Â  Â  Â  Â  Â  Â  Â  Â  listType="lost" 
Â  Â  Â  Â  Â  Â  />

Â  Â  Â  Â  Â  Â  <div className="mt-8">
Â  Â  Â  Â  Â  Â  Â  Â  {displayedItems.length === 0 ? (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-center py-10 border border-dashed border-gray-300 rounded-lg bg-gray-50">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-lg text-gray-600 font-medium mb-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  No active lost items match your current filter settings.
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-400">Try broadening your search criteria.</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* ðŸ”‘ FINAL LINK: User should report what they found, not claim the lost item */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="mt-4 text-base">
                            <span className="font-semibold text-gray-700">Found an item matching this list? </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/dashboard/report" className="text-blue-600 underline hover:text-blue-800 font-semibold">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Report it as Found!
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {displayedItems.map((item) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <ItemCard key={item.id} item={item} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  );
}