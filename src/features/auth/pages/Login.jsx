// src/features/auth/pages/Login.jsx

import { ALLOWED_DOMAIN } from "../../../config/app";
import React, { useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import { useAuth } from "../../../hooks/useAuth";

export default function Login() {
  // ðŸ”‘ MODIFIED: Import resetPassword function
Â  const { loginWithEmail, loginWithGoogle, resetPassword } = useAuth();
Â  const [email, setEmail] = useState("");
Â  const [password, setPassword] = useState("");
Â  const [err, setErr] = useState("");
Â  const [message, setMessage] = useState(""); // ðŸ”‘ NEW: State for success messages
Â  const navigate = useNavigate();

Â  const isCollegeEmail = (mail) =>
Â  Â  mail?.toLowerCase().endsWith(`@${ALLOWED_DOMAIN}`);

Â  const onSubmit = async (e) => {
Â  Â  e.preventDefault();
Â  Â  setErr("");
    setMessage(""); // Clear success message

Â  Â  if (!isCollegeEmail(email)) {
Â  Â  Â  setErr(`Use your @${ALLOWED_DOMAIN} email to log in`);
Â  Â  Â  return;
Â  Â  }

Â  Â  try {
Â  Â  Â  await loginWithEmail(email, password);
Â  Â  Â  navigate("/dashboard");
Â  Â  } catch (e) {
Â  Â  Â  setErr(e.message || "Login failed");
Â  Â  }
Â  };

Â  const onGoogleLogin = async () => {
Â  Â  setErr("");
    setMessage(""); // Clear success message
Â  Â  try {
Â  Â  Â  const user = await loginWithGoogle();
Â  Â  Â  if (!isCollegeEmail(user.email)) {
Â  Â  Â  Â  throw new Error(`Only @${ALLOWED_DOMAIN} emails are allowed`);
Â  Â  Â  }
Â  Â  Â  navigate("/dashboard");
Â  Â  } catch (e) {
Â  Â  Â  setErr(e.message || "Google sign-in failed");
Â  Â  }
Â  };
  
  // ðŸ”‘ NEW HANDLER: For Forgot Password link
  const handleResetPassword = async () => {
      setErr("");
      setMessage("");
      
      // 1. Basic Email Check: Must have a value
      if (!email || email.length < 5) {
          setErr("Please enter your email address above before clicking 'Forgot Password'.");
          return;
      }
      
      // 2. Domain Check (Optional but safe)
      if (!isCollegeEmail(email)) {
          setErr("Password reset link can only be sent to your college email address.");
          return;
      }
      
      // 3. Send Reset Email
      try {
          await resetPassword(email);
          // Firebase sends a success response even if the email isn't registered (for security reasons)
          setMessage("âœ… Password reset link sent to your email! Check your inbox (and spam folder).");
      } catch (e) {
          console.error("Reset Error:", e);
          setErr("Failed to send reset email. Please ensure the email is correct.");
      }
  }

Â  return (
Â  Â  <div className="max-w-md mx-auto p-6 mt-10 bg-white rounded-xl shadow">
Â  Â  Â  <h1 className="text-2xl font-semibold mb-4">Log in</h1>
Â  Â  Â  {err && <p className="text-red-600 mb-3">{err}</p>}
      {message && <p className="text-green-600 mb-3 bg-green-100 p-2 rounded">{message}</p>} {/* Display success message */}
      
Â  Â  Â  <form onSubmit={onSubmit} className="space-y-3">
Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  className="w-full border rounded px-3 py-2"
Â  Â  Â  Â  Â  placeholder="Email"
Â  Â  Â  Â  Â  type="email"
Â  Â  Â  Â  Â  value={email}
Â  Â  Â  Â  Â  onChange={(e) => setEmail(e.target.value)}
Â  Â  Â  Â  Â  autoComplete="email"
Â  Â  Â  Â  />
Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  className="w-full border rounded px-3 py-2"
Â  Â  Â  Â  Â  placeholder="Password"
Â  Â  Â  Â  Â  type="password"
Â  Â  Â  Â  Â  value={password}
Â  Â  Â  Â  Â  onChange={(e) => setPassword(e.target.value)}
Â  Â  Â  Â  Â  autoComplete="current-password"
Â  Â  Â  Â  />
Â  Â  Â  Â  <button className="w-full rounded bg-black text-white py-2">
Â  Â  Â  Â  Â  Continue
Â  Â  Â  Â  </button>
Â  Â  Â  </form>
      
      {/* ðŸ”‘ NEW: Forgot Password Link */}
      <div className="text-right mt-2">
          <button 
              type="button" 
              onClick={handleResetPassword}
              className="text-sm text-gray-500 hover:text-red-600 underline"
          >
              Forgot Password?
          </button>
      </div>

Â  Â  Â  <button
Â  Â  Â  Â  onClick={onGoogleLogin}
Â  Â  Â  Â  className="w-full rounded border mt-3 py-2"
Â  Â  Â  >
Â  Â  Â  Â  Continue with Google
Â  Â  Â  </button>

Â  Â  Â  <p className="mt-4 text-sm">
Â  Â  Â  Â  No account?{" "}
Â  Â  Â  Â  <Link to="/signup" className="text-blue-600 underline">
Â  Â  Â  Â  Â  Sign up
Â  Â  Â  Â  </Link>
Â  Â  Â  </p>
Â  Â  </div>
Â  );
}